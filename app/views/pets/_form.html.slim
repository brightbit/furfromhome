= simple_form_for @pet, html: { class: 'form-horizontal' } do |f|
  - if @pet.errors.any?
    #error_explanation
      h2 = "#{pluralize(@pet.errors.count, "error")} prohibited this pet from being saved:"
      ul
        - @pet.errors.full_messages.each do |message|
          li = message

  = f.input :listing_type, collection: [:found, :lost], selected: :found, label: "Animal was"
  = f.input :missing_since_found_at, as: :string, input_html: { class: "datepicker" }, label: "Found on"
  .control-group
    = f.label :photo_url, "Upload photo:", class: "control-label"
    .controls
      .pull-right
        = filepicker_image_tag f.object.photo_url, w: 100, h: 100, fit: 'clip' if f.object.photo_url
      = f.filepicker_field :photo_url, onchange: "$('#pet_photo_url').val(arguments[0].fpfile.url)"
      = f.input :photo_url, as: :hidden
  = f.input :location
  .control-group
    label.control-label Animal
    .controls= select_tag :animal, options_for_select(Breed.uniq.pluck(:species), params[:animal]), prompt: 'Kind of animal'
  = f.association :breed, prompt: 'Unknown', wrapper_html: { class: "#{'hidden' unless params[:animal]}" }
  = f.input :gender, collection: [:male, :female], prompt: "Select Gender"
  = f.input :color
  = f.input :markings, placeholder: "None"
  = f.input :age, placeholder: "Unknown"
  = f.input :weight, placeholder: "Unknown"
  -# = f.input :latitude
  -# = f.input :longitude
  = f.input :name, placeholder: "Unknown"
  = f.input :description
  = f.input :collar
  = f.input :collar_description, placeholder: "Color or pattern", wrapper_html: { class: "#{'hidden' unless @pet.collar == true}" }
  = f.input :chipped, label: "Microchipped"
  = f.input :injured

  .form-actions
    = f.button :submit
